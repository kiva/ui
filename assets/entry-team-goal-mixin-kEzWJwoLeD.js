import{g as z,l as C}from"./entry-index-tAHLmhMYuW.js";import{g as A}from"./entry-index-D4S0JsTkt8.js";import{r as N,t as c}from"./entry-index-COmIkRYU2t.js";function F(e,n){N(2,arguments);var t=c(e),r=c(n),a=t.getTime()-r.getTime();return a<0?-1:a>0?1:a}function O(e,n){if(e==null)throw new TypeError("assign requires that input parameter not be null or undefined");for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}function Y(e){return O({},e)}var E=1e3*60,p=60*24,I=p*30,T=p*365;function q(e,n,t){var r,a,l;N(2,arguments);var u=z(),o=(r=(a=t==null?void 0:t.locale)!==null&&a!==void 0?a:u.locale)!==null&&r!==void 0?r:C;if(!o.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");var d=F(e,n);if(isNaN(d))throw new RangeError("Invalid time value");var s=O(Y(t),{addSuffix:!!(t!=null&&t.addSuffix),comparison:d}),h,v;d>0?(h=c(n),v=c(e)):(h=c(e),v=c(n));var M=String((l=t==null?void 0:t.roundingMethod)!==null&&l!==void 0?l:"round"),f;if(M==="floor")f=Math.floor;else if(M==="ceil")f=Math.ceil;else if(M==="round")f=Math.round;else throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");var D=v.getTime()-h.getTime(),m=D/E,S=A(v)-A(h),g=(D-S)/E,L=t==null?void 0:t.unit,i;if(L?i=String(L):m<1?i="second":m<60?i="minute":m<p?i="hour":g<I?i="day":g<T?i="month":i="year",i==="second"){var _=f(D/1e3);return o.formatDistance("xSeconds",_,s)}else if(i==="minute"){var x=f(m);return o.formatDistance("xMinutes",x,s)}else if(i==="hour"){var R=f(m/60);return o.formatDistance("xHours",R,s)}else if(i==="day"){var b=f(g/p);return o.formatDistance("xDays",b,s)}else if(i==="month"){var w=f(g/I);return w===12&&L!=="month"?o.formatDistance("xYears",1,s):o.formatDistance("xMonths",w,s)}else if(i==="year"){var U=f(g/T);return o.formatDistance("xYears",U,s)}throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'")}function $(e,n){return N(1,arguments),q(e,Date.now(),n)}const G={props:{goal:{type:Object,required:!0,default:()=>({})}},computed:{challengeName(){var e;return((e=this.goal)==null?void 0:e.name)??""},challengeEndDate(){var e;return((e=this.goal)==null?void 0:e.endDate)??null},loansFunded(){var t,r;return(((r=(t=this.goal)==null?void 0:t.targets)==null?void 0:r.values)??[]).filter(a=>a.status==="COMPLETE").length??0},totalLoans(){var e,n;return((n=(e=this.goal)==null?void 0:e.targets)==null?void 0:n.totalCount)??0},percentageFunded(){var t,r,a,l,u,o,d,s;const e=((l=(a=(r=(t=this.goal)==null?void 0:t.targets)==null?void 0:r.values)==null?void 0:a[0])==null?void 0:l.targetLendAmount)??0,n=(o=(u=this.goal)==null?void 0:u.participation)!=null&&o.amountLent?Number((s=(d=this.goal)==null?void 0:d.participation)==null?void 0:s.amountLent):0;return Math.floor(n/e*100)||0},participationTotalCount(){var e,n;return((n=(e=this.goal)==null?void 0:e.participation)==null?void 0:n.totalCount)??0},fundedAmount(){var e,n,t,r;return(n=(e=this.goal)==null?void 0:e.participation)!=null&&n.amountLent?Number((r=(t=this.goal)==null?void 0:t.participation)==null?void 0:r.amountLent):0},totalAmount(){var e,n,t,r;return((r=(t=(n=(e=this.goal)==null?void 0:e.targets)==null?void 0:n.values)==null?void 0:t[0])==null?void 0:r.targetLendAmount)??0},daysLeft(){var n,t;const e=(n=this.goal)!=null&&n.endDate?new Date((t=this.goal)==null?void 0:t.endDate):new Date;return $(e,{unit:"day",roundingMethod:"ceil"})},challengeDescription(){var e;return((e=this.goal)==null?void 0:e.description)??""},authorName(){var e,n;return((n=(e=this.goal)==null?void 0:e.descriptionAuthor)==null?void 0:n.name)??""},authorImageUrl(){var e,n,t;return((t=(n=(e=this.goal)==null?void 0:e.descriptionAuthor)==null?void 0:n.image)==null?void 0:t.url)??""},participants(){var e;return((e=this.goal)==null?void 0:e.participation)??{}},challengeActivity(){var t,r;const e=((r=(t=this.goal)==null?void 0:t.participation)==null?void 0:r.values)??[],n=[];return e.forEach(a=>{const l=n.find(u=>{var o,d;return((o=u==null?void 0:u.lender)==null?void 0:o.id)===((d=a==null?void 0:a.lender)==null?void 0:d.id)});if(l){const u=parseFloat((l==null?void 0:l.amountLent)??0),o=parseFloat((a==null?void 0:a.amountLent)??0);l.amountLent=u+o}else n.push({...a})}),n}}};export{G as t};
