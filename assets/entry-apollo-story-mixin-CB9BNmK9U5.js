const s=({queryResult:e={},mutationResult:a={},fragmentResult:o=null,loading:t=!1}={})=>{const r={...e.data,data:{...e.data,basketAddInterstitial:{}}};return{provide:{apollo:{mutate(){return t?new Promise(()=>{}):Promise.resolve(a)},readQuery(){return r},watchQuery(){return{subscribe:({next:n})=>{n(r)}}},query(){return t?new Promise(()=>{}):Promise.resolve(r)},readFragment(){return o}}}}};export{s as a};
