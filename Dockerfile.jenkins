# build stage
FROM node:16-alpine as build-stage
RUN apk add --no-cache git
RUN apk add --no-cache bash
RUN apk add --no-cache make gcc g++ python2 pkgconfig pixman-dev cairo-dev pango-dev libjpeg-turbo-dev giflib-dev

RUN mkdir /ui
COPY ./ /ui/
WORKDIR /ui

RUN HUSKY=0 npm ci
RUN npm run build

# run stage
FROM node:16-alpine as run-stage
RUN apk add --no-cache git
RUN apk add --no-cache tini
RUN apk add --no-cache make gcc g++ python2 pkgconfig pixman-dev cairo-dev pango-dev libjpeg-turbo-dev giflib-dev

# Use Tini for entrypoint, available at /sbin/tini
# NOTE: Overridden when starting K8s pods
ENTRYPOINT ["/sbin/tini", "--"]

# Change working directory
RUN mkdir /ui
WORKDIR /ui

# Bring over app files
COPY --from=build-stage /ui/build ./build
COPY --from=build-stage /ui/config ./config
COPY --from=build-stage /ui/dist ./dist
COPY --from=build-stage /ui/server ./server
COPY --from=build-stage /ui/src ./src
COPY --from=build-stage /ui/package.json .
COPY --from=build-stage /ui/package-lock.json .

# Install PROD dependencies only
RUN HUSKY=0 NODE_ENV=production npm ci

# Expose API port to the outside
EXPOSE 8888

# Launch application
# NOTE: Uses default Production config and is overridden when starting K8s pods
CMD [ "npm", "start" ]
